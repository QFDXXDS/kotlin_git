apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'realm-android'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.xxds.kotlin_git"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "CLIENT_ID", properties.getProperty("CLIENT_ID")
        buildConfigField "String", "CLIENT_SECRET", properties.getProperty("CLIENT_SECRET")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    dataBinding {
        enabled = true
    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$anko_version"

    implementation "androidx.core:core-ktx:$ktx_version"


    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'


    implementation "android.arch.lifecycle:extensions:${lifecycle_version}"
    implementation "android.arch.persistence.room:runtime:${lifecycle_version}"
    kapt "android.arch.lifecycle:compiler:${lifecycle_version}"
    kapt "android.arch.persistence.room:compiler:${lifecycle_version}"
    //navigation
    implementation "android.arch.navigation:navigation-fragment:${navigation_version}"
    implementation "android.arch.navigation:navigation-ui:${navigation_version}"


    //dagger
    implementation "com.google.dagger:dagger:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"
    implementation "com.google.dagger:dagger-android-support:${dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger_version}"

    //ARouter
    implementation "com.alibaba:arouter-api:${arouter_api_versoion}"
    kapt "com.alibaba:arouter-compiler:${arouter_compiler_versoion}"

    ///bugly
    implementation "com.tencent.bugly:crashreport:${bugly_version}"

    //iconics 3.1.0开始使用了androidx
    implementation "com.mikepenz:iconics-core:${iconics_version}"
    implementation "com.mikepenz:iconics-views:${iconics_version}"
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.5@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.3.1.1@aar'
    implementation 'com.mikepenz:octicons-typeface:3.2.0.5@aar'
    implementation 'com.mikepenz:weather-icons-typeface:2.0.10.5@aar'
    implementation 'com.mikepenz:foundation-icons-typeface:3.0.0.5@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.5@aar'


    //RxJava
    implementation "io.reactivex.rxjava2:rxandroid:${rx_version}"
    implementation "io.reactivex.rxjava2:rxjava:${rx_version}"
    //glide
    implementation "com.github.CarGuo.GSYImageLoader:GSYGlideLoader:${gsy_image_load}"
    implementation "com.github.CarGuo.GSYImageLoader:GSYImageLoader:${gsy_image_load}"
    ///Drawer
    implementation "com.mikepenz:materialdrawer:6.0.9"
    ///lottie
    implementation "com.airbnb.android:lottie:${lottie_version}"
    //HTTP retrofit2
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp3_version}"
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-scalars:${retrofit_version}"
    implementation("com.squareup.retrofit2:converter-simplexml:${rx_version}") {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    implementation 'com.android.support:cardview-v7:28.0.0'
    //EDIT TEXT
    implementation "com.github.HITGIF:TextFieldBoxes:${textfiled_box_version}"

    implementation "devlight.io:navigationtabbar:${tabbar_version}"

    ///recycler adapter
    implementation "com.github.CarGuo.LazyRecyclerAdapter:CommonRecycler-Kotlin:${recycler_common_version}"
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    ///loading spinkit
    implementation "com.github.ybq:Android-SpinKit:${spinkit_version}"

    ///drop menu
    implementation "com.github.dongjunkun:DropDownMenu:${drop_menu_version}"
}
